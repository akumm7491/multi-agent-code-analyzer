services:
  app:
    build:
      context: .
      dockerfile: Dockerfile.dev
    ports:
      - '8000:8000'
      - '5678:5678' # For debugpy
    volumes:
      - ./src:/app/src
      - ./requirements.txt:/app/requirements.txt
      - ./.env:/app/.env
    env_file:
      - .env
    depends_on:
      redis:
        condition: service_healthy
      neo4j:
        condition: service_healthy
      standalone:
        condition: service_healthy
    networks:
      - maca-network
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://localhost:8000/health']
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7.2
    command: redis-server --requirepass ${REDIS_PASSWORD}
    ports:
      - '6379:6379'
    volumes:
      - redis_data:/data
    networks:
      - maca-network
    healthcheck:
      test: ['CMD', 'redis-cli', '-a', '${REDIS_PASSWORD}', 'ping']
      interval: 10s
      timeout: 5s
      retries: 5

  neo4j:
    image: neo4j:5.12
    environment:
      - NEO4J_AUTH=${NEO4J_AUTH}
    ports:
      - '7474:7474'
      - '7687:7687'
    volumes:
      - neo4j_data:/data
    networks:
      - maca-network
    healthcheck:
      test: ['CMD', 'wget', 'http://localhost:7474']
      interval: 10s
      timeout: 5s
      retries: 5

  etcd:
    image: quay.io/coreos/etcd:v3.5.5
    environment:
      - ETCD_AUTO_COMPACTION_MODE=revision
      - ETCD_AUTO_COMPACTION_RETENTION=1000
      - ETCD_QUOTA_BACKEND_BYTES=4294967296
      - ETCD_SNAPSHOT_COUNT=50000
    command:
      - etcd
      - --advertise-client-urls=http://etcd:2379
      - --listen-client-urls=http://0.0.0.0:2379
      - --data-dir=/etcd
    volumes:
      - etcd_data:/etcd
    healthcheck:
      test: ['CMD', 'etcdctl', 'endpoint', 'health']
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - maca-network

  minio:
    image: minio/minio:RELEASE.2023-03-20T20-16-18Z
    environment:
      MINIO_ACCESS_KEY: minioadmin
      MINIO_SECRET_KEY: minioadmin
    command: minio server /minio_data --console-address ":9001"
    volumes:
      - minio_data:/minio_data
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://localhost:9000/minio/health/live']
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - maca-network

  standalone:
    image: milvusdb/milvus:v2.3.3
    command: ['milvus', 'run', 'standalone']
    environment:
      ETCD_ENDPOINTS: etcd:2379
      MINIO_ADDRESS: minio:9000
    volumes:
      - milvus_data:/var/lib/milvus
    depends_on:
      - 'etcd'
      - 'minio'
    networks:
      - maca-network
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://localhost:9091/healthz']
      interval: 10s
      timeout: 5s
      retries: 5

networks:
  maca-network:
    driver: bridge

volumes:
  redis_data:
  neo4j_data:
  etcd_data:
  minio_data:
  milvus_data:
