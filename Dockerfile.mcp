FROM python:3.10-slim

ENV PYTHONUNBUFFERED=1 \
    PYTHONDONTWRITEBYTECODE=1 \
    PIP_NO_CACHE_DIR=1 \
    PIP_DISABLE_PIP_VERSION_CHECK=1 \
    SERVICE_TYPE=mcp

# Install system dependencies and Neo4j's cypher-shell
RUN apt-get update && apt-get install -y --no-install-recommends \
    build-essential \
    curl \
    netcat-traditional \
    redis-tools \
    iproute2 \
    dnsutils \
    iputils-ping \
    wget \
    gnupg \
    net-tools \
    && curl -fsSL https://debian.neo4j.com/neotechnology.gpg.key | apt-key add - \
    && echo 'deb https://debian.neo4j.com stable latest' | tee /etc/apt/sources.list.d/neo4j.list \
    && apt-get update \
    && apt-get install -y cypher-shell \
    && rm -rf /var/lib/apt/lists/*

WORKDIR /app

COPY requirements.txt .
COPY wait_for_neo4j.py .

RUN pip install --no-cache-dir -r requirements.txt

RUN mkdir -p /app/logs /app/data

COPY . .

COPY entrypoint.mcp.sh /app/entrypoint.sh
RUN chmod +x /app/entrypoint.sh && \
    chmod -R 755 /app/src && \
    cd /app/src && \
    pip install -e .

EXPOSE 50051

HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD curl -f http://localhost:50051/health || exit 1

ENTRYPOINT ["/app/entrypoint.sh"]

# Add debugging script
COPY <<EOF /usr/local/bin/debug-connections.sh
#!/bin/bash
echo "=== Network Information ==="
ip addr
echo "=== DNS Resolution ==="
nslookup neo4j
echo "=== Route Information ==="
netstat -rn
echo "=== Connection Test ==="
nc -zv neo4j 7687
EOF

RUN chmod +x /usr/local/bin/debug-connections.sh